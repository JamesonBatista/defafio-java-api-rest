Simple-simple

 response.rootPath("user").body("name", is("Thompson"))
        .rootPath("user.address").body("city", is("Matthews") );

        **********************************************************************
simple

  List<Object> orderList = response.jsonPath().getList("user.Order");
        List<Object> order = orderList.stream().sorted().collect(Collectors.toList());
        order.forEach(System.out::println);

        **********************************************************************
simple-medium


        JSONObject json;
        List<Object> list = response.jsonPath().getList("$");
        JSONArray jsonArray = new JSONArray(list);

        for (Object item : jsonArray) {
            json = new JSONObject(item.toString());
            System.out.println("User: " + json.getJSONObject("user"));
        }
        **********************************************************************
medium

 public void medium() throws IOException {
        JSONArray jsonArray;
        Integer quantifyUsers;
        response = postRequest("medium");
        json = new JSONObject(response);
        jsonArray = json.optJSONArray("users");
        quantifyUsers = json.optJSONArray("users").length();
        System.out.println("Quantidade de usuários: " + quantifyUsers);

        Object street = json.getJSONObject("address").get("street");
        Assert.assertEquals(street, "Avenida das Oliveiras");
        System.out.println("Street é: " + street);

        jsonArray = json.getJSONObject("address").getJSONArray("geo");

        for (Object list : jsonArray) {
            json = new JSONObject(list.toString());
            Assert.assertEquals(json.getJSONObject("state").get("long"), 15132534);
        }

        for (Object listUsers : jsonArray) {
            json = new JSONObject(listUsers.toString());
            json = json.getJSONObject("state");
            jsonArray = json.getJSONArray("planet");

            for (Object array : jsonArray) {
                Assert.assertEquals(array, "Earth");
            }
        }

        json = new JSONObject(response);
        jsonArray = json.getJSONObject("address").getJSONArray("others");

        for (Object list : jsonArray) {
            Assert.assertEquals(list, "AP401");
        }
    }

        **********************************************************************
medium-complex

        List<Object> validation = response.jsonPath().getList("$");
        JSONObject json;
        JSONArray jsonArray = new JSONArray(validation);

        for (Object items : jsonArray) {
            json = new JSONObject(items.toString());

            jsonArray = json.getJSONArray("users");

            for (Object itemList : jsonArray) {
                System.out.println(itemList);

            }

        }

        **********************************************************************
complex

           List<Object> usersList = response.jsonPath().getList("users");
            JSONArray arrayUsers = new JSONArray(usersList);
            JSONObject usersJson;

            List<Object> carList = response.jsonPath().getList("products");
            JSONArray arrayCar = new JSONArray(carList);
            JSONObject carJson;

            for (Object usersItem : arrayUsers) {
                usersJson = new JSONObject(usersItem.toString());
                System.out.println("Sou " + usersJson.get("name") + " tenho " + usersJson.get("year"));
            }

            for (Object carsItem : arrayCar) {
                carJson = new JSONObject(carsItem.toString());
                System.out.println("Carro " + carJson.get("car") + " está disponível para compra.");
            }

        **********************************************************************
complex-medium

               List<Object> listGeneral = response.jsonPath().getList("$");
               JSONObject jsonUsers;
               JSONObject jsonCars;

               JSONArray arrayGeneral = new JSONArray(listGeneral);
               JSONArray arrayCar;

               for (Object generalList : arrayGeneral) {

                   jsonUsers = new JSONObject(generalList.toString());
                   arrayGeneral = jsonUsers.getJSONArray("users");
                   for (Object usersSubList : arrayGeneral) {
                       jsonUsers = new JSONObject(usersSubList.toString());
                       System.out.println("Sou " + jsonUsers.get("name") + " tenho " + jsonUsers.get("year"));
                   }

                   jsonCars = new JSONObject(generalList.toString());
                   arrayCar = jsonCars.getJSONArray("products");
                   for (Object carList : arrayCar) {
                       jsonCars = new JSONObject(carList.toString());
                       System.out.println("Carro " + jsonCars.get("car") + " está disponível para compra.");
                   }
               }

        **********************************************************************
hard-simple


        List<Object> usersList = response.jsonPath().getList("users");
        JSONArray arrayUsers = new JSONArray(usersList);
        JSONObject jsonUsers;

        List<Object> carList = response.jsonPath().getList("products");
        JSONArray arrayCar = new JSONArray(carList);
        JSONObject jsonCar;


        for (Object userItems : arrayUsers) {
            jsonUsers = new JSONObject(userItems.toString());

            for (Object carItems : arrayCar) {
                jsonCar = new JSONObject(carItems.toString());
                if (jsonUsers.get("color").equals(jsonCar.get("color"))) {
                    System.out.println("Sou " + jsonUsers.get("name") + " tenho " +
                            jsonUsers.get("year") + " e tenho um " + jsonCar.get("car"));
                }
            }
        }


        **********************************************************************
hard-medium


        List<Object> ListGeneral = response.jsonPath().getList("$");
        JSONArray arrayListGeneral = new JSONArray(ListGeneral);
        JSONArray usersArray;
        JSONArray carArray;

        JSONObject json = null;
        JSONObject jsonCar;
        for (Object itemsListGeneral : arrayListGeneral) {
            json = new JSONObject(itemsListGeneral.toString());
            jsonCar = new JSONObject(itemsListGeneral.toString());

            usersArray = json.getJSONArray("users");
            carArray = jsonCar.getJSONArray("products");
            for (Object usersListArray : usersArray) {
                json = new JSONObject(usersListArray.toString());


                for (Object itemsCarList : carArray) {
                    jsonCar = new JSONObject(itemsCarList.toString());

                    if (json.get("color").equals(jsonCar.get("color")))
                        System.out.println("Sou " + json.get("name") + " tenho " +
                                json.get("year") + " e tenho um " + jsonCar.get("car"));
                }
            }
        }

        **********************************************************************
hard-complex



        List<Object> usersList = response.jsonPath().getList("users");
        JSONArray arrayUsers = new JSONArray(usersList);
        JSONObject jsonUsers;

        List<Object> carList = response.jsonPath().getList("products");
        JSONArray arrayCar = new JSONArray(carList);
        JSONObject jsonCar;

        for (Object usersItems : arrayUsers) {
            jsonUsers = new JSONObject(usersItems.toString());

            for (Object carItems : arrayCar) {
                jsonCar = new JSONObject(carItems.toString());

                int userValue = (int) jsonUsers.get("money");
                int carValue = (int) jsonCar.get("value");

                if (userValue > carValue)
                    System.out.println("Eu sou " + jsonUsers.get("name")
                            + " tenho " + jsonUsers.get("money") + " e posso comprar um " + jsonCar.get("car")
                            + "  " + jsonCar.get("color")+" e custa  "+jsonCar.get("value"));
            }
        }

        **********************************************************************
hard-hard

     List<Object> ListGeneral = response.jsonPath().getList("$");
        JSONArray arrayListGeneral = new JSONArray(ListGeneral);
        JSONArray usersArray;
        JSONArray carArray;

        JSONObject json = null;
        JSONObject jsonCar;
        for (Object itemsListGeneral : arrayListGeneral) {
            json = new JSONObject(itemsListGeneral.toString());
            jsonCar = new JSONObject(itemsListGeneral.toString());

            usersArray = json.getJSONArray("users");
            carArray = jsonCar.getJSONArray("products");
            for (Object usersListArray : usersArray) {
                json = new JSONObject(usersListArray.toString());


                for (Object itemsCarList : carArray) {
                    jsonCar = new JSONObject(itemsCarList.toString());

                    int userValue = (int) json.get("money");
                    int carValue = (int) jsonCar.get("value");

                    if (userValue > carValue)
                        System.out.println("Eu sou " + json.get("name")
                                + " tenho " + json.get("money") + " e posso comprar um " + jsonCar.get("car")
                                + "  " + jsonCar.get("color") + " e custa  " + jsonCar.get("value"));
                }
            }
        }

        **********************************************************************
master-simple

        List<Object> usersList = response.jsonPath().getList("users");
        JSONArray arrayUsers = new JSONArray(usersList);
        JSONObject jsonUsers;

        List<Object> carList = response.jsonPath().getList("products");
        JSONArray arrayCar = new JSONArray(carList);
        JSONObject jsonCar;

        List<Object> vipsList = response.jsonPath().getList("VIPs");
        JSONArray arrayVip = new JSONArray(vipsList);
        JSONObject jsonVip;

        for (Object itemsUsers : arrayUsers) {
            jsonUsers = new JSONObject(itemsUsers.toString());

            for (Object itemsCar : arrayCar) {
                jsonCar = new JSONObject(itemsCar.toString());

                int userValue = (int) jsonUsers.get("money");
                int carValue = (int) jsonCar.get("value");

                if (userValue > carValue) {
                    System.out.println("Eu sou " + jsonUsers.get("name")
                            + " tenho " + jsonUsers.get("money") + " e posso comprar um " + jsonCar.get("car")
                            + "  " + jsonCar.get("color") + " e custa  " + jsonCar.get("value"));

                    if (jsonUsers.get("class").equals("VIP")) {
                        for (Object itemsVips : arrayVip) {
                            jsonVip = new JSONObject(itemsVips.toString());
                            System.out.println("Sr. " + jsonUsers.get("name") + " por ser VIP o senhor tem direito também ao " + jsonVip.get("car"));
                        }
                    }
                }
            }
        }

        **********************************************************************
master-medium

       List<Object> ListGeneral = response.jsonPath().getList("$");
        JSONArray arrayListGeneral = new JSONArray(ListGeneral);
        JSONArray usersArray;
        JSONArray carArray;
        JSONArray vipArray;

        JSONObject json = null;
        JSONObject jsonCar;
        JSONObject jsonVip;

        for (Object itemsListGeneral : arrayListGeneral) {
            json = new JSONObject(itemsListGeneral.toString());
            jsonCar = new JSONObject(itemsListGeneral.toString());
            jsonVip = new JSONObject(itemsListGeneral.toString());

            usersArray = json.getJSONArray("users");
            carArray = jsonCar.getJSONArray("products");
            vipArray = jsonVip.getJSONArray("VIPs");

            for (Object usersListArray : usersArray) {
                json = new JSONObject(usersListArray.toString());

                for (Object itemsCarList : carArray) {
                    jsonCar = new JSONObject(itemsCarList.toString());

                    int userValue = (int) json.get("money");
                    int carValue = (int) jsonCar.get("value");

                    if (userValue > carValue) {

                        System.out.println("Eu sou " + json.get("name")
                                + " tenho " + json.get("money") + " e posso comprar um " + jsonCar.get("car")
                                + "  " + jsonCar.get("color") + " e custa  " + jsonCar.get("value"));

                        if (json.get("class").equals("VIP"))
                            for (Object itemsVip : vipArray) {
                                JSONObject vipJson = new JSONObject(itemsVip.toString());
                                System.out.println("Sr. " + json.get("name") + " o senhor também tem direito ao VIP " + vipJson.get("car"));
                            }
                    }
                }
            }
        }

        **********************************************************************
master-master

        List<Object> ListGeneral = response.jsonPath().getList("$");
        JSONArray arrayListGeneral = new JSONArray(ListGeneral);
        JSONArray usersArray;
        JSONArray carArray;
        JSONArray vipArray;

        JSONObject json = null;
        JSONObject jsonCar;
        JSONObject jsonVip;

        for (Object itemsListGeneral : arrayListGeneral) {
            json = new JSONObject(itemsListGeneral.toString());
            jsonCar = new JSONObject(itemsListGeneral.toString());
            jsonVip = new JSONObject(itemsListGeneral.toString());

            usersArray = json.getJSONArray("users");
            carArray = jsonCar.getJSONArray("products");
            vipArray = jsonVip.getJSONArray("VIPs");

            for (Object usersListArray : usersArray) {
                json = new JSONObject(usersListArray.toString());

                for (Object itemsCarList : carArray) {
                    jsonCar = new JSONObject(itemsCarList.toString());

                    int userValue = (int) json.get("money");
                    int carValue = (int) jsonCar.get("value");

                    if (userValue > carValue) {
                        String nameS = json.get("name").toString();
                        String nameSplit[] = nameS.split(" ");
                        System.out.println("Eu sou " + nameSplit[0]
                                + " tenho " + json.get("money") + " e posso comprar um " + jsonCar.get("car")
                                + "  " + jsonCar.get("color") + " e custa  " + jsonCar.get("value"));

                        if (nameSplit[1].equals("VIP"))
                            for (Object itemsVip : vipArray) {
                                JSONObject vipJson = new JSONObject(itemsVip.toString());
                                JSONArray vipSelect = vipJson.getJSONArray("selection-vip");
                                for (Object carItemsVip : vipSelect) {
                                    JSONObject jsonSelect = new JSONObject(carItemsVip.toString());
                                    System.out.println("Sr. " + nameSplit[0] + " o senhor também tem direito ao VIP " + jsonSelect.get("car"));

                                }
                            }
                    }
                }
            }
        }

         *********************************************************************
ultra

        Faker faker = new Faker();

        JSONObject json = new JSONObject();
        JSONArray arrayUsers = new JSONArray();
        JSONArray arrayProducts = new JSONArray();
        JSONArray vips = new JSONArray();


//        JSONObject itemUsers = new JSONObject();
        JSONObject itemProducts = new JSONObject();
        JSONObject itemVips = new JSONObject();


        for (int i = 0; i < 3; i++) {
            arrayUsers.put(arrayUsers());
        }

        for (int i = 0; i < 3; i++) {
            itemProducts.put("car", faker.name().firstName());
            arrayProducts.put(itemProducts);
        }

        for (int i = 0; i < 3; i++) {
            itemVips.put("car", faker.name().firstName());
            vips.put(itemVips);
        }

        json.put("users", arrayUsers);
        json.put("products", arrayProducts);
        json.put("VIPs", vips);

        System.out.println(json.toString(4));


        JSONObject arrayUsers() {
        Faker faker = new Faker();
        JSONObject itemUsers = new JSONObject();
        itemUsers.put("name", faker.name().firstName());
        itemUsers.put("last_name", faker.name().lastName());
        itemUsers.put("id", faker.idNumber().valid());
        return itemUsers;
    }

         *********************************************************************
camada-pre-sal


   response = given()
                .contentType(ContentType.JSON)
                .body(JSON("camada-pre-sal"))
                .when()
                .post().then();

        json = new JSONObject(response.extract().response().asString());

        jsonArray = json.getJSONObject("user-info").optJSONArray("address");
        for (Object x : jsonArray) {
            json = new JSONObject(x.toString());
            jsonArray = json.getJSONObject("primary-address").getJSONArray("house");

            for (Object a : jsonArray) {
                json = new JSONObject(a.toString());
                jsonArray = json.getJSONObject("room").getJSONArray("bed");

                for (Object b : jsonArray) {
                    json = new JSONObject(b.toString());
                    jsonArray = json.getJSONObject("sanders").optJSONArray("airPlane");

                    for (Object c : jsonArray) {
                        json = new JSONObject(c.toString());

                        if (json.has("Brooks"))
                            jsonArray = json.getJSONArray("Brooks");
                        for (Object d : jsonArray) {
                            json = new JSONObject(d.toString());
                            if (json.has("books"))
                                jsonArray = json.getJSONArray("books");
                            for (Object e : jsonArray) {
                                json = new JSONObject(e.toString());

                                if (json.has("result-final"))
                                    System.out.println(json.getJSONObject("result-final").get("value"));
                            }
                        }
                    }
                }
            }
        }
    }


         *********************************************************************

         *********************************************************************